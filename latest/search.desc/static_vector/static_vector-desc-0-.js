searchState.loadedDescShard("static_vector", 0, "<code>static_vector</code>\nAttempted to push to a full vector\nImmutable iterator over a <code>Vec</code>.\nMutable iterator over a <code>Vec</code>.\nAttempted to resize the vector to a length greater than …\nA stack-allocated vector with fixed capacity and dynamic …\nReturns the maximum number of elements the vector can …\nRemoves all elements. Size will be zero.\nCreates an empty <code>Vec</code>. Equivalent to <code>Vec::new()</code>.\nReturns a reference to the first element in the vector, or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a reference to the element at the specified <code>index</code>, …\nReturns a mutable reference to the element at the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the vector has no elements or any.\nReturns whether the vector is at maximum capacity.\nReturns an iterator over immutable references to the …\nReturns an iterator over mutable references to the …\nReturns a reference to the last element in the vector, or …\nReturns the maximum number of elements the vector currenly …\nCreates a new empty <code>Vec</code> with maximum <code>CAPACITY</code> elements of …\nCreates immutable iterator.\nCreates mutable iterator.\nReturns (and removes) the last element from the vector, or …\nReturns (and removes) the last element from the vector if …\nAdds a clone of the given <code>value</code> to the end of the vector.\nResizes the vector to the <code>new_length</code>.")